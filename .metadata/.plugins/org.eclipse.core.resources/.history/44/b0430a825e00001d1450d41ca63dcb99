package Demo091;

import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class SellTicet implements Runnable {

	private int tickets = 1000000;
	private Object obj = new Object();
	private int x = 0;
	private Lock lock=new ReentrantLock();

	@Override
	public void run() {
		// TODO Auto-generated method stub
		if (x % 2 == 0) {
				while (true) {
					lock.lock();
					if (tickets > 0) {

						System.out.println(Thread.currentThread().getName() + "正在出售" + tickets + "张");
						tickets--;
					} else {
						break;
					}
					lock.unlock();
				}
		}else {
			sellTicket();
		}
	}

	public synchronized void sellTicket() {
		while (true) {
			if (tickets > 0) {
				System.out.println(Thread.currentThread().getName() + "正在出售" + tickets + "张");
				tickets--;
			} else {
				break;
			}
		}
	}

}
